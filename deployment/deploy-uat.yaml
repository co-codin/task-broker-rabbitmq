apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dwh-task-broker
    app: task-broker-web
  name: task-broker

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dwh-task-broker
      app: task-broker-web  
      tier: frontend
      track: stable      
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dwh-task-broker
        app: task-broker-web  
        tier: frontend
        track: stable      
    spec:
      volumes:
      - name: volumelogs
        hostPath:
          path: /mnt/logs

      containers:
      - env:
        - name: LOG_DIR
          value: /var/log/n3dwh/
        - name: dwh_task_broker_db_connection_string
          value: postgresql+asyncpg://postgres:dwh@postgres:5432/broker
        - name: dwh_task_broker_db_migration_connection_string
          value: postgresql+psycopg2://postgres:dwh@postgres:5432/broker
        - name: dwh_task_broker_mq_connection_string
          value: amqp://dwh:dwh@rabbitmq:5672
        - name: dwh_task_broker_api_query_executor
          value: http://query-executor:8000/v1
        - name: dwh_task_broker_api_iam
          value: http://iam:8000

        image: 10.50.4.110:5000/task-broker:dev
        imagePullPolicy: Always
        name: task-broker
        ports:
        - containerPort: 8000
        volumeMounts:
          - mountPath: /var/log/n3dwh/
            name: volumelogs          
      imagePullSecrets:
        - name: repositorycred
 
      hostAliases:
        - ip: 127.0.0.1        
          hostnames:
          - task-broker.lan                

---
apiVersion: v1
kind: Service
metadata:
  name: task-broker
  labels:
    app: task-broker-web   
spec:
  clusterIP: None
  ports:
   - name: http
     protocol: TCP
     port: 8000
  selector:
   app: task-broker-web

