stages:
  - build
  - test
  - deploy

variables:
  DOCKER_REPO: repo.n3zdrav.ru:18444

build-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  environment:
    name: dev
  before_script:
    - echo $REGCRED | base64 -d > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --dockerfile=prod.dockerfile --context=dir://. --destination=$DOCKER_REPO/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA --cache=true --cache-repo=$DOCKER_REPO/kaniko-cache --cache-dir=/cache

build-migrations:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo $REGCRED | base64 -d > /kaniko/.docker/config.json
  script:
    - /kaniko/executor --dockerfile=.ci/Dockerfile.migrations --context=dir://. --destination=$DOCKER_REPO/$CI_PROJECT_NAME-migrations:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA --cache=true --cache-repo=$DOCKER_REPO/kaniko-cache --cache-dir=/cache

.deploy:
  stage: deploy
  image:
    name: alpine/helm:3.11.2
    entrypoint:
      - ""
  before_script:
    - mkdir -p /root/.kube
    - echo $KUBE_CONFIG | base64 -d > /root/.kube/config
  script:
    - apk add yq
    - export SITE_URL=$(echo -n $CI_ENVIRONMENT_URL | awk -F/ '{gsub(/^https:\/\//, ""); print $1}')
    - path_value=$(printf '/%s(/|$)(.*)' "$CI_PROJECT_NAME")
    - yq eval ".ingress.hosts[0].host = env(SITE_URL) | .ingress.tls[0].hosts[0] = env(SITE_URL) | .ingress.hosts[0].paths[0].path = \"${path_value}\"" .ci/$CI_PROJECT_NAME/values.yaml > .ci/$CI_PROJECT_NAME/updated-values.yaml
    - >
      helm upgrade --atomic --install -n smartdwh --timeout 1m
      --set-string secrets.db_connection_string="$DB_CONNECTION_STRING/$CI_PROJECT_NAME-$CI_ENVIRONMENT_NAME" 
      --set-string secrets.db_migration_connection_string="$DB_MIGRATION_CONNECTION_STRING/$CI_PROJECT_NAME-$CI_ENVIRONMENT_NAME"
      --set-string secrets.mq_connection_string="$MQ_CONN_STRING"
      --set image.tag=$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA 
      --set image.repository=$DOCKER_REPO/$CI_PROJECT_NAME 
      --set-string configmap.api_query_executor="http://query-executor-$CI_ENVIRONMENT_NAME:8000/v1" 
      --set-string configmap.api_iam="http://iam-$CI_ENVIRONMENT_NAME:8000" 
      --set-string configmap.exchange_compile="query_compile_$CI_ENVIRONMENT_NAME" 
      --set-string configmap.query_compile="compile_tasks_$CI_ENVIRONMENT_NAME" 
      --set-string configmap.query_compile_result="compile_results_$CI_ENVIRONMENT_NAME" 
      --set-string configmap.exchange_execute="query_execute_$CI_ENVIRONMENT_NAME" 
      --set-string configmap.query_execute_result="execute_results_$CI_ENVIRONMENT_NAME" 
      --set-string 'podAnnotations.instrumentation\.opentelemetry\.io/inject-python=true'
      $CI_PROJECT_NAME-$CI_ENVIRONMENT_NAME ./.ci/$CI_PROJECT_NAME -f .ci/$CI_PROJECT_NAME/updated-values.yaml


deploy-refactor-ci:
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "refactor-ci" && $CI_PIPELINE_SOURCE != "schedule"
    - when: never
  environment:
    name: refactor-ci
    url: https://$CI_COMMIT_REF_SLUG.smartdwh.k8s.bi.n3zdrav.ru

deploy-dev:
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE != "schedule"
    - when: never
  environment:
    name: dev
    url: https://dev.smartdwh.k8s.bi.n3zdrav.ru

deploy-test:
  extends: .deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "test" && $CI_PIPELINE_SOURCE != "schedule"
    - when: never
  environment:
    name: test
    url: https://test.smartdwh.k8s.bi.n3zdrav.ru
